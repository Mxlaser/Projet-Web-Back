name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  REGISTRY: docker.io
  IMAGE_NAME: efrei/secure-docs-backend

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis
        ports:
          - 6379:6379

    env:
      DATABASE_URL: "postgresql://adam:password123@localhost:5432/projetweb"

    steps:
      - uses: actions/checkout@v4

      - name: Create .env file
        run: |
          echo 'DATABASE_URL="postgresql://adam:password123@localhost:5432/projetweb"' > .env
          echo 'JWT_SECRET="super-secret"' >> .env
          echo 'JWT_EXPIRES_IN="1d"' >> .env

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Apply database migrations
        run: npx prisma migrate deploy

      - name: Lint (ne bloque pas la CI)
        run: |
          npm run lint || echo "❗ ESLint a détecté des erreurs, mais la CI continue."

      - name: Run tests
        run: npm run test

      - name: Build project
        run: npm run build

      - name: Install Newman
        run: npm install -g newman

      - name: Start app in background
        run: |
          npm run start > app.log 2>&1 &
          for i in {1..30}; do
            nc -z localhost 4000 && echo "✅ Server is up!" && break
            echo "⏳ Waiting for server to be ready..." && sleep 1
          done
          if ! nc -z localhost 4000; then
            echo "❌ Server did not start in time. Dumping logs:"
            cat app.log
            exit 1
          fi

      - name: Run Postman tests
        run: newman run postman/ProjetWeb.postman_collection.json

      